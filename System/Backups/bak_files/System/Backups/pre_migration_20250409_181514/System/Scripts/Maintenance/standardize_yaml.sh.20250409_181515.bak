#!/bin/bash

# Standardize YAML Frontmatter for a single file
# Usage: ./standardize_yaml.sh <file_path>

if [ $# -ne 1 ]; then
  echo "Usage: $0 <file_path>"
  exit 1
fi

FILE_PATH="$1"
TODAY=$(date +"%Y-%m-%d")

if [ ! -f "$FILE_PATH" ]; then
  echo "Error: File not found: $FILE_PATH"
  exit 1
fi

# Determine file type from path
FILE_TYPE="document"
if [[ "$FILE_PATH" == *"/Maps/"* ]]; then
  FILE_TYPE="map"
  MAP_CATEGORY="topic"
elif [[ "$FILE_PATH" == *"/Dashboards/"* ]]; then
  FILE_TYPE="dashboard"
  UPDATE_FREQUENCY="weekly"
elif [[ "$FILE_PATH" == *"/02-interviews/"* ]]; then
  FILE_TYPE="interview"
  if [[ "$FILE_PATH" == *"/players/"* ]]; then
    INTERVIEW_TYPE="athlete"
  elif [[ "$FILE_PATH" == *"/industry-professionals/"* ]]; then
    INTERVIEW_TYPE="industry"
  fi
elif [[ "$FILE_PATH" == *"/competitor-profiles/"* ]]; then
  FILE_TYPE="competitor"
elif [[ "$FILE_PATH" == *"/03-strategy/"* ]]; then
  FILE_TYPE="strategy"
elif [[ "$FILE_PATH" == *"/Templates/"* ]]; then
  FILE_TYPE="template"
elif [[ "$FILE_PATH" == *"/Documentation/"* ]]; then
  FILE_TYPE="documentation"
fi

# Get filename without extension
FILENAME=$(basename "$FILE_PATH" .md)

# Check if file already has frontmatter
HAS_FRONTMATTER=0
if grep -q "^---" "$FILE_PATH"; then
  HAS_FRONTMATTER=1
fi

# Extract existing frontmatter if present
if [ $HAS_FRONTMATTER -eq 1 ]; then
  FRONTMATTER=$(sed -n '/^---$/,/^---$/p' "$FILE_PATH")
  CONTENT=$(sed '1,/^---$/d' "$FILE_PATH" | sed '1,/^---$/d')
  
  # Extract existing values where possible
  TITLE=$(echo "$FRONTMATTER" | grep -E "^title:" | sed 's/^title: *"\?\([^"]*\)"\?$/\1/' | sed 's/^"//;s/"$//')
  if [ -z "$TITLE" ]; then
    # Try to extract from first # heading if no title in frontmatter
    TITLE=$(grep -m 1 "^# " "$FILE_PATH" | sed 's/^# //')
    if [ -z "$TITLE" ]; then
      # Use filename as fallback
      TITLE="$FILENAME"
    fi
  fi
  
  # Try both date_created and created
  DATE_CREATED=$(echo "$FRONTMATTER" | grep -E "^date_created:" | sed 's/^date_created: *\([0-9-]*\)$/\1/')
  if [ -z "$DATE_CREATED" ]; then
    DATE_CREATED=$(echo "$FRONTMATTER" | grep -E "^created:" | sed 's/^created: *\([0-9-]*\)$/\1/')
    if [ -z "$DATE_CREATED" ]; then
      DATE_CREATED="$TODAY"
    fi
  fi
  
  # Try both date_modified and modified
  DATE_MODIFIED=$(echo "$FRONTMATTER" | grep -E "^date_modified:" | sed 's/^date_modified: *\([0-9-]*\)$/\1/')
  if [ -z "$DATE_MODIFIED" ]; then
    DATE_MODIFIED=$(echo "$FRONTMATTER" | grep -E "^modified:" | sed 's/^modified: *\([0-9-]*\)$/\1/')
    if [ -z "$DATE_MODIFIED" ]; then
      DATE_MODIFIED="$TODAY"
    fi
  fi
  
  # Extract status if present
  STATUS=$(echo "$FRONTMATTER" | grep -E "^status:" | sed 's/^status: *\([a-z_]*\)$/\1/')
  if [ -z "$STATUS" ]; then
    STATUS="draft"
  fi
  
  # Extract tags if present
  TAGS_LINE=$(echo "$FRONTMATTER" | grep -E "^tags:" | sed 's/^tags: *//')
  # Convert YAML array format to simple comma-separated list
  TAGS=$(echo "$TAGS_LINE" | grep -v "^$" | sed 's/^\[//' | sed 's/\]$//' | sed 's/, */,/g')
  if [ -z "$TAGS" ]; then
    # Try multiline tag format
    TAGS=$(echo "$FRONTMATTER" | sed -n '/^tags:/,/^[a-z]/p' | grep "^- " | sed 's/^- //' | tr '\n' ',' | sed 's/,$//')
  fi
  if [ -z "$TAGS" ]; then
    # Default tags based on file type
    case $FILE_TYPE in
      map)
        TAGS="MOC,navigation"
        ;;
      dashboard)
        TAGS="dashboard,analysis"
        ;;
      interview)
        TAGS="interview,$INTERVIEW_TYPE"
        ;;
      competitor)
        TAGS="competitor,profile,analysis"
        ;;
      strategy)
        TAGS="strategy,planning"
        ;;
      template)
        TAGS="template"
        ;;
      documentation)
        TAGS="documentation,guide"
        ;;
      *)
        TAGS="document"
        ;;
    esac
  fi
else
  # No existing frontmatter, set defaults
  CONTENT=$(cat "$FILE_PATH")
  
  # Try to extract title from first heading
  TITLE=$(grep -m 1 "^# " "$FILE_PATH" | sed 's/^# //')
  if [ -z "$TITLE" ]; then
    # Use filename as fallback
    TITLE="$FILENAME"
  fi
  
  DATE_CREATED="$TODAY"
  DATE_MODIFIED="$TODAY"
  STATUS="draft"
  
  # Default tags based on file type
  case $FILE_TYPE in
    map)
      TAGS="MOC,navigation"
      ;;
    dashboard)
      TAGS="dashboard,analysis"
      ;;
    interview)
      TAGS="interview,$INTERVIEW_TYPE"
      ;;
    competitor)
      TAGS="competitor,profile,analysis"
      ;;
    strategy)
      TAGS="strategy,planning"
      ;;
    template)
      TAGS="template"
      ;;
    documentation)
      TAGS="documentation,guide"
      ;;
    *)
      TAGS="document"
      ;;
  esac
fi

# Convert comma-separated tags to YAML array format
TAGS_ARRAY=$(echo "$TAGS" | sed 's/,/, /g')
TAGS_ARRAY="[$TAGS_ARRAY]"

# Create standardized frontmatter based on file type
case $FILE_TYPE in
  map)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
map_category: $MAP_CATEGORY
tags: $TAGS_ARRAY
---"
    ;;
  dashboard)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
update_frequency: $UPDATE_FREQUENCY
tags: $TAGS_ARRAY
---"
    ;;
  interview)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
status: $STATUS
interview_type: $INTERVIEW_TYPE
tags: $TAGS_ARRAY
---"
    ;;
  competitor)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
status: $STATUS
tags: $TAGS_ARRAY
---"
    ;;
  strategy)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
status: $STATUS
tags: $TAGS_ARRAY
---"
    ;;
  template)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
tags: $TAGS_ARRAY
---"
    ;;
  documentation)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
tags: $TAGS_ARRAY
---"
    ;;
  *)
    NEW_FRONTMATTER="---
title: \"$TITLE\"
date_created: $DATE_CREATED
date_modified: $DATE_MODIFIED
status: $STATUS
tags: $TAGS_ARRAY
---"
    ;;
esac

# Combine new frontmatter with content
echo "$NEW_FRONTMATTER" > "$FILE_PATH.new"
echo "" >> "$FILE_PATH.new"
echo "$CONTENT" >> "$FILE_PATH.new"

# Backup original file
cp "$FILE_PATH" "$FILE_PATH.bak"

# Replace original with new version
mv "$FILE_PATH.new" "$FILE_PATH"

echo "Successfully standardized YAML frontmatter for: $FILE_PATH"
echo "Original file backed up to: $FILE_PATH.bak"